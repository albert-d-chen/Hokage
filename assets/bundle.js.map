{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/game.js","webpack:///./lib/main.js","webpack:///./lib/obstacle.js","webpack:///./lib/player.js","webpack:///./lib/score.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA,eAAe,mBAAO,CAAC,iCAAU;AACjC,iBAAiB,mBAAO,CAAC,qCAAY;AACrC,cAAc,mBAAO,CAAC,+BAAS;;AAE/B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,a;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;;;;;;;;;;;;;AC1FA,eAAe,mBAAO,CAAC,oCAAa;AACpC,aAAa,mBAAO,CAAC,gCAAW;;;AAGhC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,CAAC;;;;;;;;;;;;ACdD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,0B;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA,0B;;;;;;;;;;;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACvDA,a;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,WAAW;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uB","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./lib/main.js\");\n","const Player = require('./player');\nconst Obstacle = require('./obstacle');\nconst Score = require('./score');\n\nclass Game {\n    constructor(ctx, gameCanvas) {\n        this.ctx = ctx;\n        this.gameCanvas = gameCanvas;\n\n        this.player = new Player();\n        this.obstacle = new Obstacle();\n\n        this.score = new Score();\n\n        this.registerEvents();\n        // this.restartGame();\n        // this.restartGame = this.restartGame.bind(this);\n    }\n\n    play() {\n        console.log(\"play\");\n        this.running = true;\n        this.animate();\n    }\n\n    registerEvents() {\n        this.boundClickHandler = this.click.bind(this);\n        this.gameCanvas.addEventListener(\"mousedown\", this.boundClickHandler);\n        document.addEventListener('keydown', (event) => {\n            if (event.code === 'Space'){\n                this.player.jumping = true;\n            } \n        })\n        this.gameCanvas.addEventListener('keydown', this.restartGame(event))\n\n    }\n    \n    click(e) {\n        if (!this.running) {\n        // this.score.score = 0;\n        this.play();\n        }\n    }\n    \n    gameOver() {\n        return (\n            this.obstacle.checkCollision(this.player.playerHitBox())\n        )\n    }\n\n    restartGame() {\n            this.running = false;\n            this.score = new Score();\n            this.player = new Player();\n            this.obstacle = new Obstacle();\n            this.animate();\n    }\n\n    gameOverMenu() {\n        const gameover = 'GAME OVER';\n        const tryagain = 'Press L to accept defeat and try again';\n        this.ctx.font = '50px Helvetica';\n        this.ctx.strokeStyle = 'cyan';\n        this.ctx.fillStyle = 'white';\n        this.ctx.strokeText(gameover, 250, 150);\n        this.ctx.fillText(gameover, 250, 150);\n        this.ctx.font = '30px Helvetica';\n        this.ctx.strokeText(tryagain, 130, 180);\n        this.ctx.fillText(tryagain, 130, 180);\n    }\n\n    animate() {\n        this.obstacle.animate(this.ctx);\n        this.player.animate(this.ctx);\n\n        if (this.gameOver()) {\n            this.gameOverMenu();\n            this.restartGame();\n        }\n\n        this.score.draw(this.ctx);\n\n        if (this.running) {\n            requestAnimationFrame(this.animate.bind(this));\n        }\n    }\n\n\n}\n\nmodule.exports = Game;\n\n","const Player = require('./player.js')\nconst Game = require('./game.js')\n\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    const gameCanvas = document.getElementById(\"game-canvas\");\n    const ctx = gameCanvas.getContext(\"2d\");\n    // gameCanvas.width = 700;\n    // gameCanvas.height = 400;\n\n    new Game(ctx, gameCanvas);\n\n    // game.play();\n\n});\n","const CONSTANTS = {\n    OBSTACLE_WIDTH: 30,\n    SPACING: 500,\n}\n\nclass Obstacle {\n    constructor(options) {\n        this.x = 300;\n        this.y = 270;\n        this.speed = 5;\n        const firstObstacleDistance = this.x + 200;\n\n        this.obstacles = [this.createObstacle(firstObstacleDistance + 200), this.createObstacle(firstObstacleDistance * 3  )];\n    }\n\n    createObstacle(x) {\n        const obstacle = {\n            oneObstacle: {  \n                left: x,\n                right: CONSTANTS.OBSTACLE_WIDTH + x,\n                top: this.y,\n                bottom: this.y + 130\n            },\n            passed: false\n        }\n        return obstacle;\n    }\n\n    eachObstacle(callback){\n        this.obstacles.forEach(callback.bind(this))\n    }\n\n    drawObstacle(ctx) {\n        this.eachObstacle(function(obstacle) {\n            ctx.beginPath();\n            ctx.fillStyle = \"orange\";\n            ctx.fillRect(obstacle.oneObstacle.left  , this.y, 30, 130);\n            ctx.closePath();\n        })\n    }\n\n    move(ctx) {\n        this.eachObstacle(function(obstacle) {\n            obstacle.oneObstacle.left -= this.speed;\n        })\n\n        if (this.obstacles[0].oneObstacle.left <= 0) {\n            this.obstacles.shift();\n            const newObstacle = this.obstacles[0].oneObstacle.left + CONSTANTS.SPACING;\n            this.obstacles.push(this.createObstacle(newObstacle))\n        }\n        // this.x -= this.speed;\n        // ctx.clearRect(25, 350, 400, 70  0);\n    }\n\n    drawBackground(ctx) {\n        ctx.fillStyle = \"black \";\n        ctx.fillRect(0, 0, 800, 700);\n    }\n\n    animate(ctx) { \n        this.drawBackground(ctx);\n        this.move(ctx);\n        this.drawObstacle(ctx);\n    }\n\n    checkCollision(player) {\n        const _collision = (obstacleBox, playerBox) => {\n            if (obstacleBox.left > playerBox.right || obstacleBox.right < playerBox.left) {\n                return false;\n            }\n            if (obstacleBox.top > playerBox.bottom || obstacleBox.bottom < playerBox.top) {\n                return false;\n            }\n            \n            return true;\n        };\n\n        let hit = false;\n        this.eachObstacle((obstacle) => {\n            if (_collision(obstacle.oneObstacle, player)) {\n                hit = true;\n            }\n        });\n        return hit;\n    }\n\n}\n\nmodule.exports = Obstacle;","class Player {\n  constructor(options) {\n    // this.position = options.position;\n    this.vel = 0;\n    this.x = 25;\n    this.y = 350;\n    this.jumping = false;\n    this.jumpCount = 0;\n    this.jumpTimer = 0;\n  }\n\n  draw(ctx) {\n    ctx.beginPath();\n    ctx.fillStyle = \"cyan\";\n    ctx.fillRect(this.x, this.y, 50, 50);\n    ctx.closePath();\n  }\n\n  jump(ctx) {\n    const gravity = 0.4;\n    const initialSpeed = 12;\n\n    if (this.jumping) {\n      ctx.clearRect(this.x, this.y, 40, 0);\n      if (this.jumpCount === 0 || !this.grounded()) {\n        this.y -= initialSpeed - gravity * this.jumpCount;\n        this.jumpCount += 1;\n      }\n    }\n    if (this.jumpCount > 60) {\n      this.y = 350;\n      this.jumpCount = 0;\n      this.jumping = false;\n    }\n  }\n\n  grounded() {\n    return this.x === 25 && this.y >= 350;\n  }\n\n  animate(ctx) {\n    this.jump(ctx);\n    this.draw(ctx);\n  }\n\n  playerHitBox() {\n      return {\n          left: this.x,\n          right: this.x + 50,\n          top: this.y,\n          bottom: this.y + 50,\n      }\n  }\n}\n\nmodule.exports = Player;\n","class Score { \n    constructor() {\n        this.score = 0;\n    }\n\n    draw(ctx) {\n        const yourScore = `Score: ${this.score}`;\n        ctx.font = \"25px Helvetica\";\n        ctx.strokeStyle = \"cyan\";\n        ctx.lineWidth = 2;\n        ctx.fillStyle = \"white\";\n        ctx.textAlign = \"left\";\n        ctx.strokeText(yourScore, 10, 40);\n        ctx.fillText(yourScore, 10, 40);\n        this.increaseScore();\n    }\n\n    increaseScore() {\n        this.score += 1;\n    }\n}\n\nmodule.exports = Score;"],"sourceRoot":""}